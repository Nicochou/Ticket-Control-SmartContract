{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/** @file httpprovider.js\r\n * @authors:\r\n *   Marek Kotewicz <marek@parity.io>\r\n *   Marian Oancea\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2015\r\n */\nvar errors = require('web3-core-helpers').errors;\n\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\n\n\nvar http = require('http');\n\nvar https = require('https');\n/**\r\n * HttpProvider should be used to send rpc calls over http\r\n */\n\n\nvar HttpProvider = function HttpProvider(host, options) {\n  options = options || {};\n  this.withCredentials = options.withCredentials || false;\n  this.timeout = options.timeout || 0;\n  this.headers = options.headers;\n  this.agent = options.agent;\n  this.connected = false; // keepAlive is true unless explicitly set to false\n\n  var keepAlive = options.keepAlive !== false;\n  this.host = host || 'http://localhost:8545';\n\n  if (!this.agent) {\n    if (this.host.substring(0, 5) === \"https\") {\n      this.httpsAgent = new https.Agent({\n        keepAlive\n      });\n    } else {\n      this.httpAgent = new http.Agent({\n        keepAlive\n      });\n    }\n  }\n};\n\nHttpProvider.prototype._prepareRequest = function () {\n  var request; // the current runtime is a browser\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    request = new XMLHttpRequest();\n  } else {\n    request = new XHR2();\n    var agents = {\n      httpsAgent: this.httpsAgent,\n      httpAgent: this.httpAgent,\n      baseUrl: this.baseUrl\n    };\n\n    if (this.agent) {\n      agents.httpsAgent = this.agent.https;\n      agents.httpAgent = this.agent.http;\n      agents.baseUrl = this.agent.baseUrl;\n    }\n\n    request.nodejsSet(agents);\n  }\n\n  request.open('POST', this.host, true);\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.timeout = this.timeout;\n  request.withCredentials = this.withCredentials;\n\n  if (this.headers) {\n    this.headers.forEach(function (header) {\n      request.setRequestHeader(header.name, header.value);\n    });\n  }\n\n  return request;\n};\n/**\r\n * Should be used to make async request\r\n *\r\n * @method send\r\n * @param {Object} payload\r\n * @param {Function} callback triggered on end with (err, result)\r\n */\n\n\nHttpProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  var request = this._prepareRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText;\n      var error = null;\n\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        error = errors.InvalidResponse(request.responseText);\n      }\n\n      _this.connected = true;\n      callback(error, result);\n    }\n  };\n\n  request.ontimeout = function () {\n    _this.connected = false;\n    callback(errors.ConnectionTimeout(this.timeout));\n  };\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    this.connected = false;\n    callback(errors.InvalidConnection(this.host));\n  }\n};\n\nHttpProvider.prototype.disconnect = function () {//NO OP\n};\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\n\n\nHttpProvider.prototype.supportsSubscriptions = function () {\n  return false;\n};\n\nmodule.exports = HttpProvider;","map":{"version":3,"sources":["D:/Projets/group-790626/jobillet/client/node_modules/web3-providers-http/src/index.js"],"names":["errors","require","XHR2","XMLHttpRequest","http","https","HttpProvider","host","options","withCredentials","timeout","headers","agent","connected","keepAlive","substring","httpsAgent","Agent","httpAgent","prototype","_prepareRequest","request","agents","baseUrl","nodejsSet","open","setRequestHeader","forEach","header","name","value","send","payload","callback","_this","onreadystatechange","readyState","result","responseText","error","JSON","parse","e","InvalidResponse","ontimeout","ConnectionTimeout","stringify","InvalidConnection","disconnect","supportsSubscriptions","module","exports"],"mappings":"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","sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/** @file httpprovider.js\r\n * @authors:\r\n *   Marek Kotewicz <marek@parity.io>\r\n *   Marian Oancea\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2015\r\n */\r\n\r\nvar errors = require('web3-core-helpers').errors;\r\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\r\nvar http = require('http');\r\nvar https = require('https');\r\n\r\n\r\n/**\r\n * HttpProvider should be used to send rpc calls over http\r\n */\r\nvar HttpProvider = function HttpProvider(host, options) {\r\n    options = options || {};\r\n\r\n    this.withCredentials = options.withCredentials || false;\r\n    this.timeout = options.timeout || 0;\r\n    this.headers = options.headers;\r\n    this.agent = options.agent;\r\n    this.connected = false;\r\n\r\n    // keepAlive is true unless explicitly set to false\r\n    const keepAlive = options.keepAlive !== false;\r\n    this.host = host || 'http://localhost:8545';\r\n    if (!this.agent) {\r\n        if (this.host.substring(0,5) === \"https\") {\r\n            this.httpsAgent = new https.Agent({ keepAlive });\r\n        } else {\r\n            this.httpAgent = new http.Agent({ keepAlive });\r\n        }\r\n    }\r\n};\r\n\r\nHttpProvider.prototype._prepareRequest = function(){\r\n    var request;\r\n\r\n    // the current runtime is a browser\r\n    if (typeof XMLHttpRequest !== 'undefined') {\r\n        request = new XMLHttpRequest();\r\n    } else {\r\n        request = new XHR2();\r\n        var agents = {httpsAgent: this.httpsAgent, httpAgent: this.httpAgent, baseUrl: this.baseUrl};\r\n\r\n        if (this.agent) {\r\n            agents.httpsAgent = this.agent.https;\r\n            agents.httpAgent = this.agent.http;\r\n            agents.baseUrl = this.agent.baseUrl;\r\n        }\r\n\r\n        request.nodejsSet(agents);\r\n    }\r\n\r\n    request.open('POST', this.host, true);\r\n    request.setRequestHeader('Content-Type','application/json');\r\n    request.timeout = this.timeout;\r\n    request.withCredentials = this.withCredentials;\r\n\r\n    if(this.headers) {\r\n        this.headers.forEach(function(header) {\r\n            request.setRequestHeader(header.name, header.value);\r\n        });\r\n    }\r\n\r\n    return request;\r\n};\r\n\r\n/**\r\n * Should be used to make async request\r\n *\r\n * @method send\r\n * @param {Object} payload\r\n * @param {Function} callback triggered on end with (err, result)\r\n */\r\nHttpProvider.prototype.send = function (payload, callback) {\r\n    var _this = this;\r\n    var request = this._prepareRequest();\r\n\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.timeout !== 1) {\r\n            var result = request.responseText;\r\n            var error = null;\r\n\r\n            try {\r\n                result = JSON.parse(result);\r\n            } catch(e) {\r\n                error = errors.InvalidResponse(request.responseText);\r\n            }\r\n\r\n            _this.connected = true;\r\n            callback(error, result);\r\n        }\r\n    };\r\n\r\n    request.ontimeout = function() {\r\n        _this.connected = false;\r\n        callback(errors.ConnectionTimeout(this.timeout));\r\n    };\r\n\r\n    try {\r\n        request.send(JSON.stringify(payload));\r\n    } catch(error) {\r\n        this.connected = false;\r\n        callback(errors.InvalidConnection(this.host));\r\n    }\r\n};\r\n\r\nHttpProvider.prototype.disconnect = function () {\r\n    //NO OP\r\n};\r\n\r\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\r\nHttpProvider.prototype.supportsSubscriptions = function () {\r\n    return false;\r\n};\r\n\r\nmodule.exports = HttpProvider;\r\n"]},"metadata":{},"sourceType":"script"}